===============================================
Installing ONIE on QEMU RISCV64 Virtual Machine
===============================================

Cross-Compiling ONIE
====================

This assumes the riscv-gnu-toolchain has been installed in
/opt/riscv/bin.  Configured for Linux multilib, like this:

  $ ./configure --prefix=/opt/riscv --enable-multilib
  $ make linux

Change directories to ``build-config`` to compile ONIE.

To compile ONIE first change directories to ``build-config`` and then
type ``"make MACHINE=qemu_riscv64 all"``.  For example::

  $ cd build-config
  $ make -j4 MACHINE=qemu_riscv64 all

When complete, the ONIE binaries are located in
``build/images``::

-rw-r--r-- 1 3963992 Jan 30 16:38 qemu_riscv64-r0.initrd
-rw-r--r-- 1 3091328 Jan 30 10:58 qemu_riscv64-r0.vmlinuz
-rw-r--r-- 1 7067253 Jan 30 16:38 onie-updater-x86_64-qemu_riscv64-r0

qemu_riscv64-r0.vmlinuz -- This is the ONIE kernel image

qemu_riscv64-r0.initrd  -- This is the ONIE initramfs (filesystem)

onie-updater-x86_64-qemu_riscv64-r0 -- This is the ONIE self-update
image.  This image is a self-extracting archive used for installing
ONIE.

Creating a Virtual Machine
==========================

This assumes the riscv-qemu has been installed in /opt/riscv/bin.
Configured for Linux multilib, like this::

  $ git clone https://github.com/riscv/riscv-qemu.git
  $ cd riscv-qemu
  $ ./configure --prefix=/opt/riscv --target-list=riscv64-softmmu,riscv32-softmmu
  $ make

Create an 8GB virtual disk like this::

  $ qemu-img create -f qcow2 onie/build/images/onie-disk.qcow2 8G

Start qemu using the provided script::

  $ ./machine/qemu_riscv64/run-qemu

This starts qemu, but it is configured to send the serial console to a
telnet port.  qemu pauses waiting for a telnet connection on localhost
port 9005.  In another window type::

  $ telnet localhost 9005

The VM should boot into ONIE rescue mode.
